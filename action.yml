name: "Add/update repositories (with Submodules Alternative)"
description: "Adds/updates all repositories added by the Submodules Alternative workflow."
author: "Panquesito7"
inputs:
  repos_filename:
    description: "The filename used to obtain the repository data (no file format is required)."
    required: true
    default: "repos"
  use_pr:
    description: "Whether to add/update modules via PR or direct push."
    required: true
    default: true
  branch_name:
    description: "The name of the branch to push to (only if `use_pr` is enabled)."
    required: true
    default: "submodule-update"
  commit_message:
    description: "The commit message to use when adding/updating the repositories."
    required: false
    default: "Add/update submodules"
  add_repos:
    description: "Runs the `fetch-repos` script if enabled to clone all the repositories."
    required: true
    default: false
  update_repos:
    description: "Whether to update the repositories or not."
    required: true
    default: true
runs:
  using: "composite"
  steps:
    - name: Setup Git configurations
      shell: bash
      run: |
        git config --global user.name github-actions[bot]
        git config --global user.email 'github-actions@users.noreply.github.com'
    - name: Fetch the repository file if needed
      shell: bash
      run: |
        # Nothing for now.
    - name: Setup Lua
      uses: xpol/setup-lua@master
      with:
        lua-version: "5.3.3"
    - name: Clone repositories
      shell: bash
      run: |
        if [ ${{ inputs.add_repos }} = true ]; then
          cd src
          lua fetch-repos.lua ${{ inputs.repos_filename }}
          cd ..
        fi
    - name: Update all repositories
      shell: bash
      run: |
        if [ ${{ inputs.update_repos }} = true ]; then
          cd src
          lua update-repos.lua ${{ inputs.repos_filename }}
          cd ..
        fi
    - name: Commit and push changes
      shell: bash
      run: |
        git add .
        git commit -m "${{ inputs.commit_message }}"
        if [ ${{ inputs.use_pr }} = true ]; then
          git checkout -b ${{ inputs.branch_name }}
          git push origin ${{ inputs.branch_name }}:${{ inputs.branch_name }}

          gh pr create --base ${GITHUB_REF##*/} --head ${{ inputs.branch_name }} --title '${{ inputs.commit_message }}' --body 'Submodules were added or updated using the Submodules Alternative tool.' || true
        else
          git push
        fi
      with:
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
